plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id "com.diffplug.spotless" version "6.8.0"
}

group = 'dev.andrylat'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Lombok
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'

	// Spring
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-logging'

	// WebSockets
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// Kafka
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'
	
	testAnnotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.apache.kafka:kafka-streams-test-utils'
	
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'

	testImplementation 'org.awaitility:awaitility:4.2.2'
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
  java {
    importOrder()
    removeUnusedImports()
    googleJavaFormat()
  }
}

afterEvaluate {
	def spotless = tasks.findByName('spotlessApply')
	if (spotless) {
		tasks.withType(JavaCompile) {
			finalizedBy(spotless)
		}

		tasks.withType(GroovyCompile) {
			finalizedBy(spotless)
		}
	}
}

test {
	testLogging {
		exceptionFormat "full"
		testLogging.showStandardStreams = true
	}
}